<?php
/*  i am not a very great php coder. sorry for the messy code :) */
/* list of headers just incase another exploit shows up and adds it */

$hwidTypes = array("Syn-Fingerprint", "Exploit-Guid", "Proto-User-Identifier", "Sentinel-Fingerprint");
/* the reason i made a key for each exploit is to demonstrate the differences between the HWID for each exploit that supports a header */
/* i suggest that you clear this database or i will be able to use your script lol */

$database = array(
	array(
		"key" => "key_sentinel",
		"hwid" => "",
	),
	array(
		"key" => "key_sirhurt",
		"hwid" => ""
	),
	array(
		"key" => "key_protosmasher",
		"hwid" => ""
	),
	array(
		"key" => "key_synapse",
		"hwid" => "5e25c049920575968a085f208c7800d241780eb2d07dc7b684b12ea47fc71cfeee76bb9acfbf557537d3d98d304ce018753d51859fc4d4254336743bf1f82795"
			),
	array(
		"key" => "key_synapse",
		"hwid" => "b34985ad28f62dd6ceb7bf530b0526fe9cc432f298664da012b50c0baf7d4e28c185c4ff1b0ad1673541c1b74b97a7ee4679cbc8b5bb27e1d6982a0db1913f13"
				),
	array(
		"key" => "key_synapse",
		"hwid" => "067c34fda7c510fd33036bde53af64d3eab1af9392533cdbb6e156a7bb6a9ce029f45d93177b6046bb318fc253229a3db4d30a61547b7d5b0e1105cad6d1b6e3"
					),
	array(
		"key" => "key_synapse",
		"hwid" => "c147cc13d48b077f631f7a340696896c734e4fd5b2f4752dee7976c01c33380ef62bc5e05684b8671674cf1f6fe155840f8181779ce61ae3922d4e08b4908860"
		
						),
	array(
		"key" => "key_synapse",
		"hwid" => "0716cbdbe35e97d2cf3560b0f921d37a4abc514faaae7517fe96628dc768270d1489c5df5be4ef09803bfeaac3ca89ff42cf9a9e0b874352b35d0b73c8f8bb2b"
		
							),
	array(
		"key" => "key_synapse",
		"hwid" => "2046f497de942b908a048804c6caeb77c7951d2312a190de91e98da27e0c92bd8fbc735e15538cbed0ea80902993aaf2c1a678a924c9b6de7fc229a5ee201e85"
		
								),
	array(
		"key" => "key_synapse",
		"hwid" => "6b79f616f522dbe12fcb1d55980684455f796fbb917128ae54f96083bdbc4801c17e2c19ae3b2195bff720b60a6498b1700034415b8fa5457bd7a67f4a1a0026"
		
										),
	array(
		"key" => "key_synapse",
		"hwid" => "9ca3cb383dbbd26990bf9f56c54c964efe9fd1430b3cd6f3d4de6bc2af6a57f1e72d85b47deb82e592d8aae0fca9effe2424d6890e9835c857476f877e1a44b9"
		
			
										),
	array(
		"key" => "key_synapse",
		"hwid" => "d4b35f28227b2224153dbfdb37dde79557c65ac805f7ca003b6e7df832b660245cb562853b5bb4401f5717be399ac508b5333d7315167d48e6c7285ccf586bfc"
		
				
										),
	array(
		"key" => "key_synapse",
		"hwid" => "ec42a0e3ca73d6e286ec94f74fe72f108b306032069fcc629ebe7ef0707f26f9d2ab81bd37c93f360883371a37e1e721ee33e3757976f17ba7885ce442dd9b7c"
	
					
										),
	array(
		"key" => "key_synapse",
		"hwid" => "cc60de1768e237f377f5c4fefb49befd9ec8f80d4205aa519e5b245cede984df39804854f1983548781ac9fbcea1267ecd72e6164fb827f402865d8c5d9c8f72"
		
							
										),
	array(
		"key" => "key_synapse",
		"hwid" => "7b6990b69f5ec018bd81171337071e4f8c94f89980838eafcc363176a807b141994295da340024efbc53ccfdf0011dd7eb2d5b3f1647074baba48a072e081c1a"
		
									
										),
	array(
		"key" => "key_synapse",
		"hwid" => "22d2069b8942b06c856272cd8b16033385be66ec6954b5c0f9335b7b31a1a76b1572ffaa26f47446475cb0294e56cf7ccac2020fb68b7c7d31a2135dcab37136"
		
											
										),
	array(
		"key" => "key_synapse",
		"hwid" => "54dad322c30823f648359fe3eddbce68ed7b9f14d9cb44155f1e711535a90c3652dea7744e27693f72824088b3cd3724488b1be593db7a3b3f96b6b4bffeef4e"
		
												
										),
	array(
		"key" => "key_synapse",
		"hwid" => "9f21179ac8f9230139333a69a0f3e7a09502c19528493ec3ff92c1443bf3cdc2157c2aa418e1152522305f3784bf62f8b102bf8f9bea3734b3d45970314d422b"
		
														
										),
	array(
		"key" => "key_synapse",
		"hwid" => "54c55955336b9e73430c4f41221c29eee240d5cc2b69a830371867dea872d9583caf93a851324de9e15c88bec5bd253b0703234196649561082662070c1cac96"
		
															
										),
	array(
		"key" => "key_synapse",
		"hwid" => "ce0e13f51dceb11a22708d9c29aa148698d447d53915d4ba975ea7433b492540401ad133fc72f363de700db7b2dabb70be9080fa10df483ce4679c1e3f7a6744"
		
																	
										),
	array(
		"key" => "key_synapse",
		"hwid" => "99e9876abc8c8ef07720302afbf563bfad8e8b3e0564a5a8f87efa47c1a7e5d054708dfc82f37f90b50b7db6af8c72e86bf77da13e65b9ab920892752c918d54"
		
																		
										),
	array(
		"key" => "key_synapse",
		"hwid" => "eb88c02c1586282aabf82d3a1a74176ed4a16441972d959b73a313aeb88ea84e466f286d97d7c775309094f244f30573878fd2424461e0166feb16ce3f1e21af"
		
																				
										),
	array(
		"key" => "key_synapse",
		"hwid" => "3b4e4ac2cbc0ae1c3343ace10d9164d7016b1591f011160be36d9dd60edab13827c32e0fe3c1ebe90f188bca0c9308ab1ae6d9913ef7fefd0b31bec0745d85d1"
		
																					
										),
	array(
		"key" => "key_synapse",
		"hwid" => "93469a33a57781b3dfb901529fb72d94c9272049a8813a9a60c4f2add9be0dd1acf40019afb03d5c20d9c23532487f25dbf786252a7526fb4e44745e54a53395"
		
																					
										),
	array(
		"key" => "key_synapse",
		"hwid" => "a133c5cef39b51cd88ff3863ea8aa8761f327fe14fd93cb2b0e121e5c11caa4ff8267eef495028d564ba209fd72b7ad63ddc6a3d337c742f77a9c75f42f3d4fa"
		
		
	),
);

function fetch_hwid($headers) {
	global $hwidTypes;

	$hwid = NULL;
	$count = 0;
	
	foreach($hwidTypes as $key => $header) {
		if (isset($headers[$header])) {
			$count = $count + 1;
			$hwid = $headers[$header];
		};
	}

	if ($count > 1) {
		/* prevent people from setting multiple of the headers to bypass checks :) */
		/* does this work?? */

		$hwid = NULL;
	}

	return $hwid;	
}

if (isset($_GET["key"])) {
	$hwid = fetch_hwid(getallheaders());
	if (!is_null($hwid)) {
		$didUserPass = FALSE;
		$errorMsg = "authentication failed";
		$key = $_GET["key"];

		foreach($database as $_ => $user) {
			$stored_key = $user["key"];
			$stored_hwid = $user["hwid"];
			$key_matches = ($stored_key == $key);
			$hwid_matches = ($stored_hwid == $hwid);

			if ($key_matches and $hwid_matches) {
				$didUserPass = TRUE;

				/* hey, they are whitelisted! give them the correct response */

				echo(hash("sha256", $stored_key));
			} elseif ($key_matches and !$hwid_matches) {
				/* hey, why does their hardware id not match but key does? NO SHARING ALLOWED!*/

				$errorMsg = "hwid mismatch";
			}
		}

		if (!$didUserPass) {
			echo($errorMsg);
		};
	} else {
		die("no hwid supplied");
	}
} else {
	die("invalid key");
}

?>
